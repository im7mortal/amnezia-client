name: 'Release deploy workflow'

on:
  push:
    tags:
      - '*.*.*'

jobs:

#  Build-Android-Release:
#    name: 'Build-Android-Release'
#    runs-on: ubuntu-latest
#
#    env:
#      QT_VERSION: 6.4.1
#      QIF_VERSION: 4.5
#
#    steps:
#    - name: 'Install desktop Qt'
#      uses: jurplel/install-qt-action@v3
#      with:
#        version: ${{ env.QT_VERSION }}
#        host: 'linux'
#        target: 'desktop'
#        arch: 'gcc_64'
#        modules: 'qtremoteobjects qt5compat qtimageformats qtshadertools'
#        dir: ${{ runner.temp }}
#        setup-python: 'true'
#        set-env: 'true'
#        extra: '--external 7z'
#
#    - name: 'Install android Qt x86_64'
#      uses: jurplel/install-qt-action@v3
#      with:
#        version: ${{ env.QT_VERSION }}
#        host: 'linux'
#        target: 'android'
#        arch: 'android_x86_64'
#        modules: 'qtremoteobjects qt5compat qtimageformats qtshadertools'
#        dir: ${{ runner.temp }}
#        setup-python: 'true'
#        set-env: 'true'
#        extra: '--external 7z'
#
#    - name: 'Install android Qt x86'
#      uses: jurplel/install-qt-action@v3
#      with:
#        version: ${{ env.QT_VERSION }}
#        host: 'linux'
#        target: 'android'
#        arch: 'android_x86'
#        modules: 'qtremoteobjects qt5compat qtimageformats qtshadertools'
#        dir: ${{ runner.temp }}
#        setup-python: 'true'
#        set-env: 'true'
#        extra: '--external 7z'
#
#    - name: 'Install android Qt arm_v7'
#      uses: jurplel/install-qt-action@v3
#      with:
#        version: ${{ env.QT_VERSION }}
#        host: 'linux'
#        target: 'android'
#        arch: 'android_armv7'
#        modules: 'qtremoteobjects qt5compat qtimageformats qtshadertools'
#        dir: ${{ runner.temp }}
#        setup-python: 'true'
#        set-env: 'true'
#        extra: '--external 7z'
#
#    - name: 'Install android Qt arm_v8'
#      uses: jurplel/install-qt-action@v3
#      with:
#        version: ${{ env.QT_VERSION }}
#        host: 'linux'
#        target: 'android'
#        arch: 'android_arm64_v8a'
#        modules: 'qtremoteobjects qt5compat qtimageformats qtshadertools'
#        dir: ${{ runner.temp }}
#        setup-python: 'true'
#        set-env: 'true'
#        extra: '--external 7z'
#
#    - name: 'Get sources'
#      uses: actions/checkout@v3
#      with:
#        path: main
#        submodules: 'true'
#        fetch-depth: 10
#
#    - name: 'Setup ccache'
#      uses: hendrikmuhs/ccache-action@v1.2
#
#    - name: 'Setup Java'
#      uses: actions/setup-java@v3
#      with:
#        distribution: 'temurin'
#        java-version: '11'
#
#    - name: 'Build project'
#      run: |
#        export QT_HOST_PATH="${{ runner.temp }}/Qt/${{ env.QT_VERSION }}/gcc_64"
#        export NDK_VERSION=23c
#        export ANDROID_NDK_PLATFORM=android-23
#        export ANDROID_NDK_HOME=${{ runner.temp }}/android-ndk-r${NDK_VERSION}
#        export ANDROID_NDK_ROOT=$ANDROID_NDK_HOME
#
#        if [ ! -f $ANDROID_NDK_ROOT/ndk-build ]; then
#          wget https://dl.google.com/android/repository/android-ndk-r${NDK_VERSION}-linux.zip -qO ${{ runner.temp }}/ndk.zip &&
#          unzip -q -d ${{ runner.temp }} ${{ runner.temp }}/ndk.zip ;
#        fi
#
#        export QT_BIN_DIR=${{ runner.temp }}/Qt/${{ env.QT_VERSION }}/android_arm64_v8a/bin
#        cd main
#        bash deploy/build_android.sh
#
#    - name: 'Upload APK'
#      uses: actions/upload-artifact@v3
#      with:
#        name: AmneziaVPN-release-unsigned.apk
#        path: /home/runner/work/amnezia-client/amnezia-client/main/AmneziaVPN-release-unsigned.apk
#        retention-days: 7

  Update-F-Droid-Repository:
    name: 'Update-F-Droid-Repository'
#    needs:
#      - 'Build-Android-Release'
    runs-on: ubuntu-latest
    steps:

    - name: Install F-Droid server software
      run: |
        sudo add-apt-repository ppa:fdroid/fdroidserver
        sudo apt-get update
        sudo apt-get install fdroidserver

    - name: HACK fdroid tools doesn't work with no ACL buckets
      run: |
        sudo curl -o /usr/lib/python3/dist-packages/fdroidserver/deploy.py https://gitlab.com/petrl/fdroidserver/-/raw/0011f003f5e3eed7eeb878654d9c2ef1c8fed83f/fdroidserver/deploy.py

    - name: 'Get sources'
      uses: actions/checkout@v3

    - name: 'Setup ccache'
      uses: hendrikmuhs/ccache-action@v1.2

    - name: Set git tag as app version. For example from "3.0.11"
      run: echo "tag=${GITHUB_REF#refs/*/}" | tee $GITHUB_ENV

    - name: Set git tag as app version without dots. For example from "3.0.11" to "3011"
      run: echo "tagv=$(echo "${{ env.tag }}" | sed 's/v//g' | tr -d '.')" | tee $GITHUB_ENV

    - name: Set up repo secrets
      run: |
        echo "${{ secrets.KEYSTORE_P12 }}" | base64 -d - > fdroid/keystore.p12
        
        # KEYSTORE secrets has "/" so use "|" in the sed
        sed -i "s|SECRET_KEYSTOREPASS|${{ secrets.SECRET_KEYSTOREPASS }}|g" fdroid/config.yml
        sed -i "s|SECRET_KEYPASS|${{ secrets.SECRET_KEYPASS }}|g" fdroid/config.yml
        sed -i "s|SECRET_FDROID_BUCKET|${{ secrets.SECRET_FDROID_BUCKET }}|g" fdroid/config.yml
        
        sudo chmod 0600 fdroid/config.yml

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

#    - name: DEV download precompiled file for testing
#      run: |
#        mkdir -p fdroid/unsigned/
#        aws s3 cp s3://${{ secrets.SECRET_FDROID_BUCKET }}/org.amnezia.vpn_309.apk fdroid/unsigned/org.amnezia.vpn_${{ env.tagv }}.apk

#    - name: Download unsigned APK from artifacts
#      uses: actions/download-artifact@v3
#      with:
#        name: AmneziaVPN-release-unsigned.apk
#        path: fdroid/unsigned

#    - name: Set required artifact APK name
#      run: |
#        mv fdroid/unsigned/AmneziaVPN-release-unsigned.apk fdroid/unsigned/org.amnezia.vpn_${{ env.tagv }}.apk

    - name: Set version in template yaml
      run: |
        sed -i "s/TAG_VERSION/${{ env.tag }}/g" fdroid/metadata/org.amnezia.vpn.yml
        sed -i "s/TAG_CODE_VERSION/${{ env.tagv }}/g" fdroid/metadata/org.amnezia.vpn.yml

    - name: Download from root of s3 bucket
      run: |
        aws s3 cp s3://amneziavpn/fdroid/repo fdroid/repo --recursive
        aws s3 cp s3://amneziavpn/fdroid/archive fdroid/archive --recursive
        
        cp fdroid/repo-icon.png fdroid/repo/icons
        cp fdroid/archive-icon.png fdroid/archive/icons
        

#    - name: Run fdroid publish
#      run: |
#        cd ./fdroid
#        fdroid publish

    - name: Run fdroid update
      run: |
        cd ./fdroid
        fdroid update

    - name: Run fdroid deploy
      run: |
        cd ./fdroid
        fdroid deploy

    - name: Install aws cli for cloudfront invalidation
      id: install-aws-cli
      uses: unfor19/install-aws-cli-action@master
      with:
        version: "2"

    - name: Invalidate cache on cloudfront distribution
      run: aws cloudfront create-invalidation --distribution-id ${{ secrets.DISTRIBUTION_ID }} --paths "/*"
      shell: bash

#    - name: 'Upload APK'
#      uses: actions/upload-artifact@v3
#      with:
#        name: org.amnezia.vpn_${{ env.tagv }}.apk
#        path: fdroid/repo/org.amnezia.vpn_${{ env.tagv }}.apk
#        retention-days: 7

