name: 'Release deploy workflow'

on:
  push:
    tags:
      - '*.*.*'

jobs:

  Build-Android-Release:
    name: 'Build-Android-Release'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - abi: 'x86_64'
            qt_arch: 'android_x86_64'

    env:
      QT_VERSION: 6.5.2
      ANDROID_BUILD_PLATFORM: android-33

    steps:
      - name: 'Install desktop Qt'
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ env.QT_VERSION }}
          host: 'linux'
          target: 'desktop'
          arch: 'gcc_64'
          modules: 'qtremoteobjects qt5compat qtimageformats qtshadertools'
          dir: ${{ runner.temp }}
          setup-python: 'true'
          set-env: 'true'
          extra: '--external 7z'

      - name: 'Install android Qt'
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ env.QT_VERSION }}
          host: 'linux'
          target: 'android'
          arch: ${{ matrix.qt_arch }}
          modules: 'qtremoteobjects qt5compat qtimageformats qtshadertools'
          dir: ${{ runner.temp }}
          setup-python: 'true'
          set-env: 'true'
          extra: '--external 7z'

      - name: 'Grant execute permission for qt-cmake'
        shell: bash
        run: |
          chmod +x ${{ runner.temp }}/Qt/${{ env.QT_VERSION }}/${{ matrix.qt_arch }}/bin/qt-cmake

      - name: 'Get sources'
        uses: actions/checkout@v3
        with:
          submodules: 'true'

      - name: 'Setup ccache'
        uses: hendrikmuhs/ccache-action@v1.2

      - name: 'Setup Java'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: 'Setup Android NDK'
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: 'r25c'
          local-cache: 'true'

      - name: 'Decode keystore secret to file'
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_P12 }}
        shell: bash
        run: |
          echo $KEYSTORE_P12 | base64 --decode > android.keystore

      - name: 'Build project'
        env:
          ANDROID_NDK_ROOT: ${{ steps.setup-ndk.outputs.ndk-path }}
          QT_HOST_PATH: ${{ runner.temp }}/Qt/${{ env.QT_VERSION }}/gcc_64
          QT_ANDROID_KEYSTORE_PATH: ${{ github.workspace }}/android.keystore
          QT_ANDROID_KEYSTORE_ALIAS: ${{ secrets.ANDROID_RELEASE_KEYSTORE_KEY_ALIAS }}
          QT_ANDROID_KEYSTORE_STORE_PASS: ${{ secrets.ANDROID_RELEASE_KEYSTORE_KEY_PASS }}
          QT_ANDROID_KEYSTORE_KEY_PASS: ${{ secrets.ANDROID_RELEASE_KEYSTORE_KEY_PASS }}
        shell: bash
        run: ./deploy/build_android.sh --apk ${{ matrix.abi }} --platform ${{ env.ANDROID_BUILD_PLATFORM }}

      - name: 'Upload apk'
        uses: actions/upload-artifact@v3
        with:
          name: AmneziaVPN-release-signed.apk
          path: deploy/build/AmneziaVPN-${{ matrix.abi }}-release-signed.apk
          retention-days: 7

  Update-F-Droid-Repository:
    name: 'Update-F-Droid-Repository'
    needs:
      - 'Build-Android-Release'
    runs-on: ubuntu-latest
    steps:

      - name: Install F-Droid server software
        run: |
          sudo add-apt-repository ppa:fdroid/fdroidserver
          sudo apt-get update
          sudo apt-get install fdroidserver

      - name: HACK fdroid tools doesn't work with no ACL buckets
        run: |
          sudo curl -o /usr/lib/python3/dist-packages/fdroidserver/deploy.py https://gitlab.com/petrl/fdroidserver/-/raw/52acdf158a33285bec7d160c31e4f868eb35451e/fdroidserver/deploy.py

      - name: 'Get sources'
        uses: actions/checkout@v3

      - name: 'Setup ccache'
        uses: hendrikmuhs/ccache-action@v1.2

      - name: Set git tag as app version. For example from "3.0.11"
        run: echo "tag=${GITHUB_REF#refs/*/}" | tee $GITHUB_ENV

      - name: Set git tag as app version without dots. For example from "3.0.11" to "3011"
        run: echo "tagv=$(echo "${{ env.tag }}" | sed 's/v//g' | tr -d '.')" | tee $GITHUB_ENV

      - name: Set up repo secrets
        run: |
          echo "${{ secrets.KEYSTORE_P12 }}" | base64 -d - > fdroid/keystore.p12
          
          # KEYSTORE secrets has "/" so use "|" in the sed
          sed -i "s|SECRET_KEYSTOREPASS|${{ secrets.SECRET_KEYSTOREPASS }}|g" fdroid/config.yml
          sed -i "s|SECRET_KEYPASS|${{ secrets.SECRET_KEYPASS }}|g" fdroid/config.yml
          sed -i "s|SECRET_FDROID_BUCKET|${{ secrets.SECRET_FDROID_BUCKET }}|g" fdroid/config.yml
          
          sudo chmod 0600 fdroid/config.yml

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      #    - name: DEV download precompiled file for testing
      #      run: |
      #        mkdir -p fdroid/unsigned/
      #        aws s3 cp s3://${{ secrets.SECRET_FDROID_BUCKET }}/org.amnezia.vpn_309.apk fdroid/unsigned/org.amnezia.vpn_${{ env.tagv }}.apk

      - name: Download signed APK from artifacts
        uses: actions/download-artifact@v3
        with:
          name: AmneziaVPN-release-signed.apk
          path: fdroid/repo

      - name: Set required artifact APK name
        run: |
          mv fdroid/repo/AmneziaVPN-release-signed.apk fdroid/repo/org.amnezia.vpn_${{ env.tagv }}.apk

      - name: Set version in template yaml
        run: |
          sed -i "s/TAG_VERSION/${{ env.tag }}/g" fdroid/metadata/org.amnezia.vpn.yml
          sed -i "s/TAG_CODE_VERSION/${{ env.tagv }}/g" fdroid/metadata/org.amnezia.vpn.yml

      - name: Download from root of s3 bucket
        run: |
          aws s3 cp s3://amneziavpn/fdroid/repo fdroid/repo --recursive
          aws s3 cp s3://amneziavpn/fdroid/archive fdroid/archive --recursive
          
          ### something is broken in f-droid. So we copy icons explicitly
          cp fdroid/repo-icon.png fdroid/repo/icons
          cp fdroid/archive-icon.png fdroid/archive/icons

      - name: Run fdroid publish
        run: |
          cd ./fdroid
          fdroid publish

      - name: Run fdroid update
        run: |
          cd ./fdroid
          fdroid update

      - name: Run fdroid deploy
        run: |
          cd ./fdroid
          fdroid deploy

      - name: Install aws cli for cloudfront invalidation
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@master
        with:
          version: "2"

      - name: Invalidate cache on cloudfront distribution
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.DISTRIBUTION_ID }} --paths "/*"
        shell: bash

  #    - name: 'Upload APK'
  #      uses: actions/upload-artifact@v3
  #      with:
  #        name: org.amnezia.vpn_${{ env.tagv }}.apk
  #        path: fdroid/repo/org.amnezia.vpn_${{ env.tagv }}.apk
  #        retention-days: 7

